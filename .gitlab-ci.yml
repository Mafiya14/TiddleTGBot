stages:
  - build and push
  - deploy

default:
  tags:
    - docker

variables:
  AWS_ECR_REPOSITORY: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

.prepare:
  services:
      - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache aws-cli
    - mkdir ~/.ssh  ~/.aws
    - printf "%s\n" "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $REMOTE_HOST_DEV >> ~/.ssh/known_hosts
    - |
      cat <<EOF > ~/.ssh/config
      Host dev
      HostName $REMOTE_HOST_DEV
      User ubuntu
      IdentityFile ~/.ssh/id_rsa
      EOF
    - docker context create dev --docker "host=ssh://ubuntu@dev"
    - |
      cat <<EOF > ~/.aws/credentials
      [default]
      aws_access_key_id=$AWS_ACCESS_KEY_ID
      aws_secret_access_key=$AWS_SECRET_ACCES_KEY
      EOF
    - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ECR_REPOSITORY

build and push:
  stage: build and push
  extends: .prepare
  script:
    - docker build -t $AWS_ECR_REPOSITORY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest .
    - docker push $AWS_ECR_REPOSITORY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest

deploy:
  stage: deploy
  extends: .prepare
  script:
    - docker --context dev compose pull
    - docker --context dev compose up -d --force-recreate
  needs: 
    - build and push
